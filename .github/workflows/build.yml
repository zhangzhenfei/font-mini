name: 构建与发布

on:
  push:
    tags:
      - 'v*'

# 添加权限配置
permissions:
  contents: write

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 安装 Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 23
          cache: 'npm'

      # 为macOS设置适当的Python环境
      - name: 设置Python环境（macOS）
        if: matrix.os == 'macos-latest'
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # 在macOS上安装必要的Python依赖
      - name: 安装Python依赖（macOS）
        if: matrix.os == 'macos-latest'
        run: |
          pip install setuptools

      # 在Linux上安装必要的依赖
      - name: 安装Linux依赖（Linux）
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxkbfile-dev libxkbfile1 libgconf-2-4 libgnome-keyring-dev libgtk-3-0 libxss1 libnss3 libasound2
          sudo chmod +x node_modules/app-builder-bin/linux/x64/app-builder

      - name: 安装依赖
        run: npm ci

      # 修复Linux app-builder执行权限
      - name: 修复app-builder权限（Linux）
        if: matrix.os == 'ubuntu-latest'
        run: |
          if [ -f "node_modules/app-builder-bin/linux/x64/app-builder" ]; then
            chmod +x node_modules/app-builder-bin/linux/x64/app-builder
          fi

      - name: 构建应用
        run: npm run build

      - name: 构建并发布应用 (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          # 首先构建 x64 版本
          npm run build:mac
          # 然后构建 arm64 版本 (可选，取决于是否需要支持 Apple Silicon)
          # npm run build:mac -- --arm64
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: 构建并发布应用 (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run build:win
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 构建并发布应用 (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npm run build:linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
